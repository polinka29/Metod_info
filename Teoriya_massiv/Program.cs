
Теоретический материал (С++)
Многомерные массивы
Объявление, ввод и вывод двумерного массива
Объявление int A[n] создает в памяти одномерный массив: набор пронумерованных элементов,
 идущих в памяти последовательно. Но можно создать и массив массивов следующим образом: int A[n][m]. 
 Данное объявление создает массив из n объектов, каждый из которых в свою очередь является массивом типа int [m]. 
 Тогда A[i], где i принимает значения от 0 до n-1 будет в свою очередь одним из n созданных обычных массивов,
  и обратиться к элементу с номером j в этом массиве можно через A[i][j].

Подобные объекты (массивы массивов) также называют двумерными массивами. 
Двумерные массивы можно представлять в виде квадратной таблицы, в которой
 первый индекс элемента означает номер строки, а второй индекс – номер столбца.
  Например, массив A[3][4] будет состоять из 12 элементов и его можно записать в виде

    A[0][0]  A[0][1]  A[0][2]  A[0][3]
    A[1][0]  A[1][1]  A[1][2]  A[1][3]
    A[2][0]  A[2][1]  A[2][2]  A[2][3]

Для считывания, вывода на экран и обработки двумерных массивов необходимо 
использовать вложенные циклы. Первый цикл – по первому индексу (то есть по всем строкам),
 второй цикл – по второму индексу, то есть по всем элементам в строках. Например,
  вывести на экран двумерный массив в виде таблицы, разделяя элементы в строке 
  одним пробелом можно следующим образом:

    int A[n][m];
    for(int i=0;i<n;++i)
    {  // Выводим на экран строку i
       for(int j=0;j<m;++j)
          cout<<A[i][j]<<" ";
       cout<<endl; // Строка завершается символом перехода на новую строку
    }

А считать двумерный массив с клавиатуры можно при помощи еще более простого 
алгоритма (массив вводится по строкам, то есть в порядке, соответствующему первому примеру):

    for(int i=0;i<n;++i)
    
    for(i=0;i<n;++i)
       for(j=0;j<m;++j)
          cin>>A[i][j];
